import 'dart:convert';

import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart' hide Response;
import 'package:appName/feature/example/argument/example_argument.dart';
import 'package:appName/feature/example/model/example_model.dart';
import 'package:appName/core/base/base.controller.dart';
import 'package:appName/repository/example_repository.dart';

class ExampleController extends BaseController {
  final ExampleRepository exampleRepository = Get.find(tag: (ExampleRepository).toString());
    ExampleArgument? exampleArgument;

    final RxList<ExampleModel> _exampleListController =
    RxList.empty();

    List<ExampleModel> get exampleList =>
        _exampleListController.toList();

  @override
  void onInit() {
    // TODO: implement onInit
    exampleArgument = Get.arguments;
    debugPrint("Example Argument => ${exampleArgument?.id}");
    // getExampleData();
    super.onInit();
  }

  @override
  void onReady() {
    super.onReady();
  }

  @override
  void onClose() {
    super.onClose();
  }

  /*void getExampleData(){
    var exampleDataService = exampleRepository.getDataFromApi();

    callDataService(
      exampleDataService,
      onSuccess: _handleDataExampleList
    );
  }

  void _handleDataExampleList(List<YourModelList> yourModelList){
    _exampleListController(yourModelList);
  }*/
}